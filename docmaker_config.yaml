# Uncomment entries in this file and update them to pass parameters to the
# robot via this yaml file instead of via command line. If both are passed,
# values set at the command line take precedence.

# Defines a path to source files. All files within
# this path will be parsed for documentation.

# source_path: path/to/source/

# Defines the ``robot.yaml`` file to reference from the provided source path.
# This should be a relative path from the source path above.

# source_robot: robot.yaml

# List of Python modules to parse from source_path. If excluded, will parse all
# modules in source_path

# include:
#  - library_to_include
#  - second_lib_to_include

# The documentation will use this title as the resulting website's main title,
# you can remove to use the source_path's directory name.

# project_title: My Libraries

# Defaults to ``rfw`` for Robot Framework. This
# will read the source files as Robot Framework libraries. Allowed
# values are:
# - ``rfw``: interprets modules and classes as Robot Framework
#   libraries and generated keyword documentation.
# - ``python``: interprets modules as Python modules and
#   documents them as programmatic APIs.

# language: rfw

# Defaults to ``rest`` as most Python libraries are 
# written using restructured text format, but you can
# select alternatives such as ``robot``, ``html``, or ``text``. If a
# library specifies it's documentation format, that will be used
# instead.

# documentation_format: rest

# Default to False. Set to True if you are invoking
# this package from inside your own robot/project and have installed
# all of this project's dependencies in your own conda.yaml.

# in_project: false